generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMS
enum UserRole {
  member
  admin
}

enum TaskStatus {
  pending
  inProgress
  finished
}

enum TaskPriority {
  low
  medium
  high
}

// TABELAS
model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  role UserRole @default(member)

  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  TeamMember  TeamMember[]
  Task        Task[]
  TaskHistory TaskHistory[]

  @@map("users")
}

model Team {
  id          String  @id @default(uuid())
  name        String
  description String?

  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  TeamMember TeamMember[]
  Task       Task[]

  @@map("teams")
}

model TeamMember {
  id     String @id @default(uuid())
  userId String @map("user_Id")
  teamId String @map("team_Id")

  createdAt DateTime @default(now()) @map("created_at")

  user   User    @relation(fields: [userId], references: [id])
  team   Team    @relation(fields: [teamId], references: [id])
  taskId String?

  @@unique([userId, teamId])
  @@map("team_members")
}

model Task {
  id          String  @id @default(uuid())
  name        String
  description String?

  status   TaskStatus   @default(pending)
  priority TaskPriority @default(medium)

  assignedTo String @map("assigned_to")
  teamId     String @map("team_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user        User          @relation(fields: [assignedTo], references: [id])
  team        Team          @relation(fields: [teamId], references: [id])
  TaskHistory TaskHistory[]

  @@map("tasks")
}

model TaskHistory {
  id String @id @default(uuid())

  taskId    String @map("task_id")
  changedBy String @map("changed_by")

  oldStatus TaskStatus @map("old_status")
  newStatus TaskStatus @map("new_status")

  changedAt DateTime @default(now()) @map("changed_at")

  task    Task @relation(fields: [taskId], references: [id])
  changed User @relation(fields: [changedBy], references: [id])

  @@map("tasks_history")
}
